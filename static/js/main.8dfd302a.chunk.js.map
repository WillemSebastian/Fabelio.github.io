{"version":3,"sources":["component/product.js","view/index.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","className","style","fontSize","fontWeight","data","name","color","price","description","furniture_style","toString","delivery_time","View","componentDidMount","loadData","a","fetch","method","response","json","furnitureStyle","furniture_styles","map","key","setState","furnitureStyleOptions","searchResult","products","filterData","e","JSON","parse","stringify","state","furnitureList","furnitureFilter","MaximumDeliveryDays","Math","max","apply","timeFilter","time","maximumDeliveryDays","length","nameFilter","result","filter","product","some","r","includes","onChangeFilterFurnitureName","target","value","renderProductCard","onSelectFurnitureStyle","selectedList","onRemoveFurnitureStyle","onSelectDeliveryTime","onRemoveDeliveryTime","deliveryTimeOptions","id","type","placeholder","onKeyUp","this","options","selectedValues","selectedValue","onSelect","onRemove","displayValue","showCheckbox","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8dfd302a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Product(props) {\n  return (\n    <div className=\"col-lg-6 col-12\">\n      <div className=\"productCard\">\n        <div className=\"productHeader\">\n          <p style={{ fontSize: 20, fontWeight: \"bold\" }}>{props.data.name}</p>\n          <p style={{ color: \"orange\", fontWeight: \"bold\" }}>\n            Rp {props.data.price},00\n          </p>\n        </div>\n        <div className=\"productDescription\">\n          <p>{props.data.description}</p>\n          <p style={{ color: \"blue\" }}>\n            {props.data.furniture_style.toString()}\n          </p>\n        </div>\n        <div className=\"productFooter\">\n          <p></p>\n          <p style={{ color: \"blue\", fontWeight: \"bold\" }}>\n            {props.data.delivery_time} Hari\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Product from \"../component/product\";\n\nexport default class View extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      furnitureStyleOptions: [],\n      deliveryTimeOptions: [\n        { name: \"1 Week\", id: 1, maximumDeliveryDays: 7 },\n        { name: \"2 Weeks\", id: 2, maximumDeliveryDays: 14 },\n        { name: \"1 Months\", id: 3, maximumDeliveryDays: 31 },\n        { name: \"More\", id: 4, maximumDeliveryDays: 365 }\n      ],\n      nameFilter: \"\",\n      furnitureFilter: [],\n      timeFilter: [],\n      searchResult: []\n    };\n  }\n  componentDidMount = () => {\n    this.loadData();\n  };\n\n  loadData = async () => {\n    const url = \"http://www.mocky.io/v2/5c9105cb330000112b649af8\";\n    const response = await fetch(url, {\n      method: \"GET\"\n    });\n    const data = await response.json();\n\n    //restructure furniture style json to match with multipleselect requirement\n    var furnitureStyle = data.furniture_styles.map(style => {\n      return { name: style, key: style };\n    });\n\n    this.setState({\n      data,\n      furnitureStyleOptions: furnitureStyle,\n      searchResult: data.products\n    });\n  };\n\n  filterData = e => {\n    var data = JSON.parse(JSON.stringify(this.state.data));\n    var furnitureList = this.state.furnitureFilter.map(style => {\n      return style.name;\n    });\n    var MaximumDeliveryDays = Math.max.apply(\n      null,\n      this.state.timeFilter.map(time => {\n        return time.maximumDeliveryDays;\n      })\n    );\n    if (\n      this.state.timeFilter.length === 0 &&\n      this.state.furnitureFilter.length === 0 &&\n      this.state.nameFilter === \"\"\n    ) {\n      //reset back to original data if there no filter\n      this.setState({ searchResult: this.state.data.products });\n    } else {\n      var result = data.products.filter(product => {\n        if (this.state.nameFilter === \"\") {\n          if (this.state.furnitureFilter.length === 0) {\n            return product.delivery_time <= MaximumDeliveryDays;\n          } else if (this.state.timeFilter.length === 0) {\n            return product.furniture_style.some(r => furnitureList.includes(r));\n          } else {\n            return (\n              product.furniture_style.some(r => furnitureList.includes(r)) &&\n              product.delivery_time <= MaximumDeliveryDays\n            );\n          }\n        } else if (this.state.furnitureFilter.length === 0) {\n          if (this.state.nameFilter.length === 0) {\n            return product.delivery_time <= MaximumDeliveryDays;\n          } else if (this.state.timeFilter.length === 0) {\n            return product.name.includes(this.state.nameFilter);\n          } else {\n            return (\n              product.name.includes(this.state.nameFilter) &&\n              product.delivery_time <= MaximumDeliveryDays\n            );\n          }\n        } else if (this.state.timeFilter.length === 0) {\n          if (this.state.nameFilter === \"\") {\n            return product.furniture_style.some(r => furnitureList.includes(r));\n          } else if (this.state.furnitureFilter.length === 0) {\n            product.name.includes(this.state.nameFilter);\n          } else {\n            return (\n              product.furniture_style.some(r => furnitureList.includes(r)) &&\n              product.name.includes(this.state.nameFilter)\n            );\n          }\n        } else {\n          return (\n            product.name.includes(this.state.nameFilter) &&\n            product.furniture_style.some(r => furnitureList.includes(r)) &&\n            product.delivery_time <= MaximumDeliveryDays\n          );\n        }\n      });\n      this.setState({ searchResult: result });\n    }\n  };\n\n  onChangeFilterFurnitureName = e => {\n    this.setState(\n      {\n        nameFilter: e.target.value\n      },\n      () => this.filterData()\n    );\n  };\n\n  renderProductCard = () => {\n    return this.state.searchResult.length === 0\n      ? null\n      : this.state.searchResult.map(product => {\n          return <Product data={product} key={product.name} />;\n        });\n  };\n\n  onSelectFurnitureStyle = selectedList => {\n    this.setState({ furnitureFilter: selectedList }, () => this.filterData());\n  };\n\n  onRemoveFurnitureStyle = selectedList => {\n    this.setState({ furnitureFilter: selectedList }, () => this.filterData());\n  };\n\n  onSelectDeliveryTime = selectedList => {\n    this.setState(\n      {\n        timeFilter: selectedList\n      },\n      () => this.filterData()\n    );\n  };\n\n  onRemoveDeliveryTime = selectedList => {\n    this.setState(\n      {\n        timeFilter: selectedList\n      },\n      () => this.filterData()\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"box\">\n            <div className=\"header\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-12 p20\">\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"text\"\n                    placeholder=\" Search Furniture\"\n                    onKeyUp={this.onChangeFilterFurnitureName}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-12 p20\">\n                  <Multiselect\n                    options={this.state.furnitureStyleOptions} // Options to display in the dropdown\n                    selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                    onSelect={this.onSelectFurnitureStyle} // Function will trigger on select event\n                    onRemove={this.onRemoveFurnitureStyle} // Function will trigger on remove event\n                    displayValue=\"name\" // Property name to display in the dropdown options\n                    showCheckbox={true}\n                    placeholder=\"Furniture Style\"\n                  />\n                </div>\n                <div className=\"col-lg-6 col-12 p20\">\n                  <Multiselect\n                    options={this.state.deliveryTimeOptions} // Options to display in the dropdown\n                    selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                    onSelect={this.onSelectDeliveryTime} // Function will trigger on select event\n                    onRemove={this.onRemoveDeliveryTime} // Function will trigger on remove event\n                    displayValue=\"name\" // Property name to display in the dropdown options\n                    placeholder=\"Delivery Time\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"content row\">{this.renderProductCard()}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./App.css\";\nimport View from \"./view\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View></View>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}